{"gems":{"name":"rack-cors-csrf_prevention","downloads":82,"version":"0.2.0","version_created_at":"2024-02-15T17:11:25.484Z","version_downloads":21,"platform":"ruby","authors":"Digital Classifieds LLC","info":"The middleware makes sure any request to specified paths would have been\npreflighted if it was sent by a browser.\n\nWe don't want random websites to be able to execute actual GraphQL\noperations from a user's browser unless our CORS policy supports it. It's\nnot good enough just to ensure that the browser can't read the response from\nthe operation; we also want to prevent CSRF, where the attacker can cause\nside effects with an operation or can measure the timing of a read\noperation. Our goal is to ensure that we don't run the context function or\nexecute the GraphQL operation until the browser has evaluated the CORS\npolicy, which means we want all operations to be pre-flighted. We can do\nthat by only processing operations that have at least one header set that\nappears to be manually set by the JS code rather than by the browser\nautomatically.\n\nPOST requests generally have a content-type `application/json`, which is\nsufficient to trigger preflighting. So we take extra care with requests that\nspecify no content-type or that specify one of the three non-preflighted\ncontent types. For those operations, we require one of a set of specific\nheaders to be set. By ensuring that every operation either has a custom\ncontent-type or sets one of these headers, we know we won't execute\noperations at the request of origins who our CORS policy will block.\n","licenses":["MIT"],"metadata":{"homepage_uri":"https://github.com/digitaz/rack-cors-csrf_prevention","source_code_uri":"https://github.com/digitaz/rack-cors-csrf_prevention"},"yanked":false,"sha":"127f0dae9ec89aa0cfafd589efc829574de9d7b5a075db42ecaa729d22ecefc1","project_uri":"https://rubygems.org/gems/rack-cors-csrf_prevention","gem_uri":"https://rubygems.org/gems/rack-cors-csrf_prevention-0.2.0.gem","homepage_uri":"https://github.com/digitaz/rack-cors-csrf_prevention","wiki_uri":null,"documentation_uri":null,"mailing_list_uri":null,"source_code_uri":"https://github.com/digitaz/rack-cors-csrf_prevention","bug_tracker_uri":null,"changelog_uri":null,"funding_uri":null,"dependencies":{"development":[{"name":"debug","requirements":"~> 1.9, >= 1.9.1"},{"name":"rake","requirements":"~> 13.0"},{"name":"rspec","requirements":"~> 3.0"}],"runtime":[{"name":"rack","requirements":">= 1"}]}},"vcs_name":"GitHub","ci":1,"github_actions":1,"vcs_uri":"https://github.com/digitaz/rack-cors-csrf_prevention"}