{"gems":{"name":"sidekiq_alive","downloads":1866225,"version":"2.1.7","version_created_at":"2022-12-13T15:12:43.370Z","version_downloads":0,"platform":"ruby","authors":"Artur PanÌƒach","info":"SidekiqAlive offers a solution to add liveness probe of a Sidekiq instance.\n\n  How?\n\n  A http server is started and on each requests validates that a liveness key is stored in Redis. If it is there means is working.\n\n  A Sidekiq job is the responsable to storing this key. If Sidekiq stops processing jobs\n  this key gets expired by Redis an consequently the http server will return a 500 error.\n\n  This Job is responsible to requeue itself for the next liveness probe.","licenses":["MIT"],"metadata":{},"yanked":false,"sha":"364a1774df2f673df745ac23a00441bafdcaaabf3408ec6241aed9bf9ec514cd","project_uri":"https://rubygems.org/gems/sidekiq_alive","gem_uri":"https://rubygems.org/gems/sidekiq_alive-2.1.7.gem","homepage_uri":"https://github.com/arturictus/sidekiq_alive","wiki_uri":null,"documentation_uri":"https://www.rubydoc.info/gems/sidekiq_alive/2.1.7","mailing_list_uri":null,"source_code_uri":null,"bug_tracker_uri":null,"changelog_uri":null,"funding_uri":null,"dependencies":{"development":[{"name":"bundler","requirements":"> 1.16"},{"name":"mock_redis","requirements":">= 0"},{"name":"rack-test","requirements":">= 0"},{"name":"rake","requirements":"~> 13.0"},{"name":"rspec","requirements":"~> 3.0"},{"name":"rspec-sidekiq","requirements":"~> 3.0"}],"runtime":[{"name":"sidekiq","requirements":">= 0"},{"name":"webrick","requirements":">= 0"}]}},"vcs_name":"GitHub","ci":1,"github_actions":1,"vcs_uri":"https://github.com/arturictus/sidekiq_alive"}