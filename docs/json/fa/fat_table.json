{"gems":{"name":"fat_table","downloads":26092,"version":"0.9.3","version_created_at":"2023-05-24T09:19:51.804Z","version_downloads":16,"platform":"ruby","authors":"Daniel E. Doherty","info":"    FatTable is a gem that treats tables as a data type. It provides methods for\n    constructing tables from a variety of sources, building them row-by-row,\n    extracting rows, columns, and cells, and performing aggregate operations on\n    columns. It also provides as set of SQL-esque methods for manipulating table\n    objects: select for filtering by columns or for creating new columns, where\n    for filtering by rows, order_by for sorting rows, distinct for eliminating\n    duplicate rows, group_by for aggregating multiple rows into single rows and\n    applying column aggregate methods to ungrouped columns, a collection of join\n    methods for combining tables, and more.\n\n    Furthermore, FatTable provides methods for formatting tables and producing\n    output that targets various output media: text, ANSI terminals, ruby data\n    structures, LaTeX tables, Emacs org-mode tables, and more. The formatting\n    methods can specify cell formatting in a way that is uniform across all the\n    output methods and can also decorate the output with any number of footers,\n    including group footers. FatTable applies formatting directives to the extent\n    they makes sense for the output medium and treats other formatting directives as\n    no-ops.\n\n    FatTable can be used to perform operations on data that are naturally best\n    conceived of as tables, which in my experience is quite often. It can also serve\n    as a foundation for providing reporting functions where flexibility about the\n    output medium can be quite useful. Finally FatTable can be used within Emacs\n    org-mode files in code blocks targeting the Ruby language. Org mode tables are\n    presented to a ruby code block as an array of arrays, so FatTable can read\n    them in with its .from_aoa constructor. A FatTable table can output as an\n    array of arrays with its .to_aoa output function and will be rendered in an\n    org-mode buffer as an org-table, ready for processing by other code blocks.\n","licenses":[],"metadata":{"yard.run":"yri","allowed_push_host":"https://rubygems.org"},"yanked":false,"sha":"d23bb1d79a58915b6a6129520ce4ded535657ac26a79201a25dc614e3c22274e","project_uri":"https://rubygems.org/gems/fat_table","gem_uri":"https://rubygems.org/gems/fat_table-0.9.3.gem","homepage_uri":"https://github.com/ddoherty03/fat_table","wiki_uri":null,"documentation_uri":"https://www.rubydoc.info/gems/fat_table/0.9.3","mailing_list_uri":null,"source_code_uri":null,"bug_tracker_uri":null,"changelog_uri":null,"funding_uri":null,"dependencies":{"development":[{"name":"bundler","requirements":">= 0"},{"name":"debug","requirements":">= 1.0.0"},{"name":"pg","requirements":">= 0"},{"name":"pry","requirements":">= 0"},{"name":"pry-doc","requirements":">= 0"},{"name":"rake","requirements":"~> 13.0"},{"name":"redcarpet","requirements":">= 0"},{"name":"rspec","requirements":"~> 3.0"},{"name":"rubocop-performance","requirements":">= 0"},{"name":"rubocop-rspec","requirements":">= 0"},{"name":"simplecov","requirements":">= 0"},{"name":"sqlite3","requirements":">= 0"}],"runtime":[{"name":"fat_core","requirements":">= 4.9.0"},{"name":"gem-path","requirements":">= 0"},{"name":"rainbow","requirements":">= 0"},{"name":"sequel","requirements":">= 0"}]}},"vcs_name":"GitHub","ci":1,"travis_ci":1,"vcs_uri":"https://github.com/ddoherty03/fat_table"}