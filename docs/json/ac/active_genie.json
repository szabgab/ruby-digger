{"gems":{"name":"active_genie","downloads":630,"version":"0.0.12","version_created_at":"2025-03-17T04:56:58.525Z","version_downloads":4,"platform":"ruby","authors":"Radamés Roriz","info":"# ActiveGenie 🧞‍♂️\n> The lodash for GenAI, stop reinventing the wheel\n\n[![Gem Version](https://badge.fury.io/rb/active_genie.svg?icon=si%3Arubygems)](https://badge.fury.io/rb/active_genie)\n[![Ruby](https://github.com/roriz/active_genie/actions/workflows/ruby.yml/badge.svg)](https://github.com/roriz/active_genie/actions/workflows/ruby.yml)\n\nActiveGenie is a Ruby gem that provides a polished, production-ready interface for working with Generative AI (GenAI) models. Just like Lodash or ActiveStorage, ActiveGenie simplifies GenAI integration in your Ruby applications.\n\n## Features\n\n- 🎯 **Data Extraction**: Extract structured data from unstructured text with type validation\n- 📊 **Data Scoring**: Multi-reviewer evaluation system\n- ⚔️ **Data Battle**: Battle between two data like a political debate\n- 💭 **Data Ranking**: Consistent rank data using scoring + elo ranking + battles\n\n## Installation\n\n1. Add to your Gemfile:\n```ruby\ngem 'active_genie'\n```\n\n2. Install the gem:\n```shell\nbundle install\n```\n\n3. Generate the configuration:\n```shell\necho \"ActiveGenie.load_tasks\" >> Rakefile\nrails g active_genie:install\n```\n\n4. Configure your credentials in `config/initializers/active_genie.rb`:\n```ruby\nActiveGenie.configure do |config|\n  config.openai.api_key = ENV['OPENAI_API_KEY']\nend\n```\n\n## Quick Start\n\n### Data Extractor\nExtract structured data from text using AI-powered analysis, handling informal language and complex expressions.\n\n```ruby\ntext = \"Nike Air Max 90 - Size 42 - $199.99\"\nschema = {\n  brand: { \n    type: 'string',\n    enum: [\"Nike\", \"Adidas\", \"Puma\"]\n  },\n  price: { \n    type: 'number',\n    minimum: 0\n  },\n  size: {\n    type: 'integer',\n    minimum: 35,\n    maximum: 46\n  }\n}\n\nresult = ActiveGenie::DataExtractor.call(text, schema)\n# => { \n#      brand: \"Nike\", \n#      brand_explanation: \"Brand name found at start of text\",\n#      price: 199.99,\n#      price_explanation: \"Price found in USD format at end\",\n#      size: 42,\n#      size_explanation: \"Size explicitly stated in the middle\"\n#    }\n```\n\nFeatures:\n- Structured data extraction with type validation\n- Schema-based extraction with custom constraints\n- Informal text analysis (litotes, hedging)\n- Detailed explanations for extracted values\n\nSee the [Data Extractor README](lib/active_genie/data_extractor/README.md) for informal text processing, advanced schemas, and detailed interface documentation.\n\n### Data Scoring\nText evaluation system that provides detailed scoring and feedback using multiple expert reviewers. Get balanced scoring through AI-powered expert reviewers that automatically adapt to your content.\n\n```ruby\ntext = \"The code implements a binary search algorithm with O(log n) complexity\"\ncriteria = \"Evaluate technical accuracy and clarity\"\n\nresult = ActiveGenie::Scoring.basic(text, criteria)\n# => {\n#      algorithm_expert_score: 95,\n#      algorithm_expert_reasoning: \"Accurately describes binary search and its complexity\",\n#      technical_writer_score: 90,\n#      technical_writer_reasoning: \"Clear and concise explanation of the algorithm\",\n#      final_score: 92.5\n#    }\n```\n\nFeatures:\n- Multi-reviewer evaluation with automatic expert selection\n- Detailed feedback with scoring reasoning\n- Customizable reviewer weights\n- Flexible evaluation criteria\n\nSee the [Scoring README](lib/active_genie/scoring/README.md) for advanced usage, custom reviewers, and detailed interface documentation.\n\n### Data Battle\nAI-powered battle evaluation system that determines winners between two players based on specified criteria.\n\n```ruby\nrequire 'active_genie'\n\nplayer_a = \"Implementation uses dependency injection for better testability\"\nplayer_b = \"Code has high test coverage but tightly coupled components\"\ncriteria = \"Evaluate code quality and maintainability\"\n\nresult = ActiveGenie::Battle.call(player_a, player_b, criteria)\n# => {\n#      winner_player: \"Implementation uses dependency injection for better testability\",\n#      reasoning: \"Player A's implementation demonstrates better maintainability through dependency injection, \n#                 which allows for easier testing and component replacement. While Player B has good test coverage, \n#                 the tight coupling makes the code harder to maintain and modify.\",\n#      what_could_be_changed_to_avoid_draw: \"Focus on specific architectural patterns and design principles\"\n#    }\n```\n\nFeatures:\n- Multi-reviewer evaluation with automatic expert selection\n- Detailed feedback with scoring reasoning\n- Customizable reviewer weights\n- Flexible evaluation criteria\n\nSee the [Battle README](lib/active_genie/battle/README.md) for advanced usage, custom reviewers, and detailed interface documentation.\n\n### Data Ranking\nThe Ranking module provides competitive ranking through multi-stage evaluation:\n\n\n```ruby\nrequire 'active_genie'\n\nplayers = ['REST API', 'GraphQL API', 'SOAP API', 'gRPC API', 'Websocket API']\ncriteria = \"Best one to be used into a high changing environment\"\n\nresult = ActiveGenie::Ranking.call(players, criteria)\n# => {\n#      winner_player: \"gRPC API\",\n#      reasoning: \"gRPC API is the best one to be used into a high changing environment\",\n#    }\n```\n\n- **Multi-phase ranking system** combining expert scoring and ELO algorithms\n- **Automatic elimination** of inconsistent performers using statistical analysis\n- **Dynamic ranking adjustments** based on simulated pairwise battles, from bottom to top\n\nSee the [Ranking README](lib/active_genie/ranking/README.md) for implementation details, configuration, and advanced ranking strategies.\n\n### Text Summarizer (Future)\n### Language detector (Future)\n### Translator (Future)\n### Sentiment analyzer (Future)\n\n## Configuration\n\n| Config | Description | Default |\n|--------|-------------|---------|\n| `provider` | LLM provider (openai, anthropic, etc) | `nil` |\n| `model` | Model to use | `nil` |\n| `api_key` | Provider API key | `nil` |\n| `timeout` | Request timeout in seconds | `5` |\n| `max_retries` | Maximum retry attempts | `3` |\n\n> **Note:** Each module can append its own set of configuration, see the individual module documentation for details.\n\n## Contributing\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## License\n\nThis project is licensed under the Apache License 2.0 License - see the [LICENSE](LICENSE) file for details.\n","licenses":["Apache-2.0"],"metadata":{"homepage_uri":"https://github.com/Roriz/active_genie","changelog_uri":"https://github.com/Roriz/active_genie/blob/master/CHANGELOG.md","bug_tracker_uri":"https://github.com/Roriz/active_genie/issues","documentation_uri":"https://github.com/Roriz/active_genie/wiki","rubygems_mfa_required":"true"},"yanked":false,"sha":"683448a0987df40df60fe10d115423721ec0af058c0e24ab8a885b486afdaa8a","spec_sha":"4c57c583257ebc68d72c637d4eb749a1f9e5536f97df1782b0206274b3e5a936","project_uri":"https://rubygems.org/gems/active_genie","gem_uri":"https://rubygems.org/gems/active_genie-0.0.12.gem","homepage_uri":"https://github.com/Roriz/active_genie","wiki_uri":null,"documentation_uri":"https://github.com/Roriz/active_genie/wiki","mailing_list_uri":null,"source_code_uri":null,"bug_tracker_uri":"https://github.com/Roriz/active_genie/issues","changelog_uri":"https://github.com/Roriz/active_genie/blob/master/CHANGELOG.md","funding_uri":null,"dependencies":{"development":[],"runtime":[]}},"vcs_name":"GitHub","ci":1,"github_actions":1,"vcs_uri":"https://github.com/Roriz/active_genie"}