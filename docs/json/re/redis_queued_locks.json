{"gems":{"name":"redis_queued_locks","downloads":102778,"version":"1.15.0","version_created_at":"2025-10-17T15:24:42.493Z","version_downloads":29,"platform":"ruby","authors":"Rustam Ibragimov","info":"|> Distributed locks with \"prioritized lock acquisition queue\" capabilities based on the Redis Database.\n|> Each lock request is put into the request queue (each lock is hosted by its own queue separately from other queues) and processed in order of their priority (FIFO).\n|> Each lock request lives some period of time (RTTL) (with requeue capabilities) which guarantees the request queue will never be stacked.\n|> In addition to the classic `queued` (FIFO) strategy RQL supports `random` (RANDOM) lock obtaining strategy when any acquirer from the lock queue can obtain the lock regardless the position in the queue.\n|> Provides flexible invocation flow, parametrized limits (lock request ttl, lock ttl, queue ttl, lock attempts limit, fast failing, etc), logging and instrumentation.","licenses":["MIT"],"metadata":{"homepage_uri":"https://github.com/0exp/redis_queued_locks","changelog_uri":"https://github.com/0exp/redis_queued_locks/blob/master/CHANGELOG.md","source_code_uri":"https://github.com/0exp/redis_queued_locks/blob/master"},"yanked":false,"sha":"958ad6c12f32aae31660b52d18422c600fe64d8505bbb9e2ecc9a2e1a102bfc4","spec_sha":"d1fc38983c18c45ddbe25874bd1574714cc8a27c2ebcb24f02807b50498c9da5","project_uri":"https://rubygems.org/gems/redis_queued_locks","gem_uri":"https://rubygems.org/gems/redis_queued_locks-1.15.0.gem","homepage_uri":"https://github.com/0exp/redis_queued_locks","wiki_uri":null,"documentation_uri":null,"mailing_list_uri":null,"source_code_uri":"https://github.com/0exp/redis_queued_locks/blob/master","bug_tracker_uri":null,"changelog_uri":"https://github.com/0exp/redis_queued_locks/blob/master/CHANGELOG.md","funding_uri":null,"dependencies":{"development":[],"runtime":[{"name":"redis-client","requirements":"~> 0.20"}]}},"vcs_name":"GitHub","ci":null,"vcs_error":"ERROR","vcs_uri":"https://github.com/0exp/redis_queued_locks/blob/master"}