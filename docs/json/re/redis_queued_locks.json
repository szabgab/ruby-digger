{"gems":{"name":"redis_queued_locks","downloads":102526,"version":"1.14.0","version_created_at":"2025-10-17T12:41:10.239Z","version_downloads":23,"platform":"ruby","authors":"Rustam Ibragimov","info":"|> Distributed locks with \"prioritized lock acquisition queue\" capabilities based on the Redis Database.\n|> Each lock request is put into the request queue (each lock is hosted by it's own queue separately from other queues) and processed in order of their priority (FIFO).\n|> Each lock request lives some period of time (RTTL) (with requeue capabilities) which guarantees the request queue will never be stacked.\n|> In addition to the classic `queued` (FIFO) strategy RQL supports `random` (RANDOM) lock obtaining strategy when any acquirer from the lock queue can obtain the lock regardless the position in the queue.\n|> Provides flexible invocation flow, parametrized limits (lock request ttl, lock ttl, queue ttl, lock attempts limit, fast failing, etc), logging and instrumentation.","licenses":["MIT"],"metadata":{"homepage_uri":"https://github.com/0exp/redis_queued_locks","changelog_uri":"https://github.com/0exp/redis_queued_locks/blob/master/CHANGELOG.md","source_code_uri":"https://github.com/0exp/redis_queued_locks/blob/master"},"yanked":false,"sha":"1868c0582755ec9d55ac231986b867a7245c3c152629ef0bf0eae08934cdb6c9","spec_sha":"5f9a4b943ec66768bf17e019de12527c2c4dd0c953d3956a9b47093b67fa3f5b","project_uri":"https://rubygems.org/gems/redis_queued_locks","gem_uri":"https://rubygems.org/gems/redis_queued_locks-1.14.0.gem","homepage_uri":"https://github.com/0exp/redis_queued_locks","wiki_uri":null,"documentation_uri":null,"mailing_list_uri":null,"source_code_uri":"https://github.com/0exp/redis_queued_locks/blob/master","bug_tracker_uri":null,"changelog_uri":"https://github.com/0exp/redis_queued_locks/blob/master/CHANGELOG.md","funding_uri":null,"dependencies":{"development":[],"runtime":[{"name":"redis-client","requirements":"~> 0.20"}]}},"vcs_name":"GitHub","ci":null,"vcs_error":"ERROR","vcs_uri":"https://github.com/0exp/redis_queued_locks/blob/master"}